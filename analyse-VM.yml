---
- name: VMware VM Detailed Report
  hosts: vcenter_servers
  connection: local
  gather_facts: false

  vars:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "{{ vcenter_username }}"
    vcenter_password: "{{ vcenter_password }}"

  tasks:

    - name: Gather all VMs in vCenter
      community.vmware.vmware_vm_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
      delegate_to: localhost
      register: all_vms

    - name: Initialize counters
      set_fact:
        linux_count: 0
        windows_count: 0

    - name: Build VM report list
      set_fact:
        vm_report: "{{ vm_report | default([]) + [ { 'name': item.name | default('Unknown'), 'os': item.guest_full_name | default('Unknown'), 'power': item.power_state | default('Unknown') } ] }}"
      loop: "{{ all_vms.virtual_machines | default([]) }}"

    - name: Count Linux and Windows VMs
      set_fact:
        linux_count: "{{ linux_count + 1 }}"
      loop: "{{ all_vms.virtual_machines | default([]) }}"
      when: item.guest_full_name is defined and ('Linux' in item.guest_full_name)

    - name: Count Windows VMs
      set_fact:
        windows_count: "{{ windows_count + 1 }}"
      loop: "{{ all_vms.virtual_machines | default([]) }}"
      when: item.guest_full_name is defined and ('Windows' in item.guest_full_name)

    - name: Display VM Table
      ansible.builtin.debug:
        msg: |
          {% for vm in vm_report %}
          Name: {{ vm.name }} | OS: {{ vm.os }} | Power: {{ vm.power }}
          {% endfor %}

    - name: Display Summary
      ansible.builtin.debug:
        msg: |
          Total VMs: {{ vm_report | length }}
          Linux VMs: {{ linux_count }}
          Windows VMs: {{ windows_count }}
